题目：给定一个数组，目标数字。要求在数组中找到两个数之和为目标数字。返回数组下标
Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

思路：整个实现步骤为：先遍历一遍数组，建立 HashMap 映射，然后再遍历一遍，开始查找，找到则记录 index。

import java.util.HashMap;
public class Solution {
    public int[] twoSum(int[] nums, int target) {
        //hashmap 映射
        HashMap<Integer,Integer> m = new HashMap<Integer,Integer>();
        int[] res = new int[2]
        for(int i = 0 ;i<nums.length;i++){
            m.put(nums[i],i);
        }
        
        for(int i = 0 ;i<nums.length;i++){
            int t = target - nums[i];
            if (m.containsKey(t) && m.get(t) != i){
                res[0] = i;
                res[1] = m.get(t);
            }
        }
        return res;
    }
}
